@startuml messages
package MessagesModule {
    class User {
        + userID: int
        + name: string
        + bio: string

        + changeName(name: string): int
        + updateBio(bio: string): int
    }

    class UserWithHigherAuthority extends User {
        + position: enum

        + broadcastMessage()
    }

    class Message {
        + messageID: int
        + sender_ID: int
        + recipient_IDs: list<int>
        + messageContent: string
        + timestamp: date
        + isBroadcast: bool
        + isDraft: bool
        + isDeleted: bool

        + modifyMessage()
        + addRecipient(userID: int)
        + removeRecipient(userID: int)
        + sendMessage()
        + scheduleMessage()
        + sendToDraft()
        + deleteMessage()
    }

    class CommunicationRecordingSystem {
        - messageIDs: List<int>

        + getAllRecordings()
        + deleteAllRecordings(password: string)
        + getRecording(messageID: int)
        + deleteRecording(messageID: int)
    }

    class Broadcaster {
        + message_ID: int
        + recipientGroupIDs: list<int>

        + attachMessageToBroadcast()
        + broadcastAttachedMessage()
        + removeFromBroadcast()
        + addRecipientGroup(groupID: int)
        + removeRecipientGroup(groupID: int)
        + listAvailableRecipientGroups()
    }

    Broadcaster "1" --> "0..*" Message: broadcasts
    CommunicationRecordingSystem "1" --> "0..*" Message: Records
    User "0..*" --> "0..*" Message: Sends
    UserWithHigherAuthority "0..*" --> "1" Broadcaster: uses
}
@enduml
