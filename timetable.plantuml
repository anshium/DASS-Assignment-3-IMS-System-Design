@startuml
package TimetableModule {
    abstract class User {
        - name: string
        - email: string
    }

    class Employee {
        + setSubjectLimit(limit: int)
        + getEmail(): string
    }

    class TimetableCreator {
        - timetables: List<Timetable>
        + createTimetable(name, email)
        + createTimetableInAdvance(date, time, day, subject, teacher, classroom)
        + editTimetableEntry(date, time, day, subject, teacher, classroom)
        + deleteTimetableEntry()
        + alertOnEmployeeSubjectLimits(employee: Employee)
    }

    class AlertSystem {
        - subjectLimits: Map<Employee, int>
        - threshold: int
        + createAlert(subjectLimits)
        + editThreshold()
        + editAlert(subjectLimits)
        + deleteAlert()
        + verifyAlert(user)
    }

    class Timetable {
        - date
        - time
        - day
        - subject
        - teacher
        - classroom
        - subjectLimits: int
        - theme: enum
    }

    TimetableCreator "1" -- "0..*" Timetable : creates
    TimetableCreator --|> User : generalizes
    TimetableCreator o-- AlertSystem : alerts
    AlertSystem "1" -- "0..*" Employee : has
}
@enduml
